---
description: 
globs: 
alwaysApply: true
---
### 🔄 Project Awareness & Context
- **Always read `PLANNING.md`** at the start of a new conversation to understand the project's architecture, goals, style, and constraints.
- **Check `TASK.md`** before starting a new task. If the task isn’t listed, add it with a brief description and today's date.
- **Use consistent naming conventions, file structure, and architecture patterns** as described in `PLANNING.md`.
- **Use [santorini-project-rule.mdc](mdc:.cursor/rules/santorini-project-rule.mdc) to see the official rules of the boardgame.**

### 🧱 Code Structure & Modularity
- **Never create a file longer than 500 lines of code.** If a file approaches this limit, refactor by splitting it into modules or helper files.
- **Organize code into clearly separated modules**, grouped by feature or responsibility.
- **Use clear, consistent imports** 


### ✅ Task Completion
- **Mark completed tasks in `TASK.md`** immediately after finishing them.
- Add new sub-tasks or TODOs discovered during development to `TASK.md` under a “Discovered During Work” section.

### 📎 Style & Conventions
- **Always comply with Object Oriented Pinciples** With every feature that is implemented, you must consider how it can be designed so that in the future it can be easily extended. Always prefer using variables compared to hard coded values. 
- **DRY principle** never repeat writing the same code. If more than 1 part of the code uses the same logic, extract this into a function/class. 
- **SOLID principles** Make sure to follow these principles for every feature implemented.
- **Use Java** as the primary language.
- **Follow Java style guidlines**


### 📚 Documentation & Explainability
- **Comment non-obvious code** and ensure everything is understandable to a developer who has never seen the codebase before.
- When writing complex logic, **add an inline `// Reason:` comment** explaining the why, not just the what.

### 🧠 AI Behavior Rules
- **Never assume missing context. Ask questions if uncertain.**
- **Always confirm file paths and module names** exist before referencing them in code or tests.

